import Link from "next/link";
import { Button } from "@/components/ui/button";
import { ArrowLeft } from "lucide-react";
import { ExplanationCard } from "@/components/explanation-card";
import { getBitcoinPrice } from "@/services/get-bitcoin-isr";
import { Card, CardContent } from "@/components/ui/card";

export default async function ISRPage() {
  const bitcoinData = await getBitcoinPrice();

  return (
    <div className="min-h-screen bg-background">
      <div className="max-w-6xl mx-auto">
        <Link href="/">
          <Button variant="ghost" className="mb-6">
            <ArrowLeft className="w-4 h-4 mr-2" />
            Voltar
          </Button>
        </Link>

        <div className="mb-8">
          <h1 className="text-4xl font-bold mb-2">
            ISR - Incremental Static Regeneration
          </h1>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <ExplanationCard
            description={
              <>
                Veja como a p√°gina carregou quase instantaneamente, mas se voc√™
                esperar alguns segundos e recarregar, ver√° que o pre√ßo do
                Bitcoin foi atualizado automaticamente! Isso √© ISR (Incremental
                Static Regeneration) em a√ß√£o! üöÄ
                <br />
                No ISR, a p√°gina √© gerada estaticamente durante o build, mas com
                um toque especial: ela pode ser atualizada em segundo plano ap√≥s
                um certo tempo (definido por voc√™). Isso significa que voc√™
                obt√©m a performance do SSG, mas com dados que podem ser
                atualizados regularmente.
                <br />
                üëâ Dica: experimente desativar o JavaScript no navegador e
                recarregar a p√°gina. Voc√™ ver√° que o conte√∫do ainda aparece,
                pois ele j√° vem todo montado!
              </>
            }
            howItWorks={[
              "Aqui foi quase que instant√¢neo para carregar, n√©?",
              "Isso acontece porque a p√°gina √© gerada estaticamente no build",
              "Servida como HTML est√°tico (r√°pido)",
              "Ap√≥s o tempo de revalida√ß√£o (ex: 60s)",
              "Pr√≥xima requisi√ß√£o dispara regenera√ß√£o em background",
              "Nova vers√£o est√°tica √© gerada e servida",
              "Recarregue a p√°gina ap√≥s 10 segundos para ver a atualiza√ß√£o",
            ]}
            pros={[
              "Performance de SSG",
              "Dados atualizados automaticamente",
              "Melhor dos dois mundos",
              "Escal√°vel e eficiente",
              "SEO excelente",
            ]}
            cons={[
              "Dados podem estar levemente desatualizados",
              "Complexidade adicional",
              "Primeira requisi√ß√£o ap√≥s revalida√ß√£o √© mais lenta",
              "Requer configura√ß√£o de tempo",
            ]}
            useCases={[
              "Dashboards com dados que mudam frequentemente",
              "P√°ginas de produtos com pre√ßos atualizados",
              "Blogs com coment√°rios recentes",
              "Sites que precisam de bom SEO e dados atualizados",
            ]}
          />
          <Card>
            <CardContent className="text-center h-full justify-center flex flex-col ">
              <div>
                <div className="inline-flex items-center justify-center w-20 h-20 bg-orange-500/10 rounded-full mb-4">
                  <span className="text-4xl">‚Çø</span>
                </div>
                <h2 className="text-2xl font-bold text-foreground mb-2">
                  Bitcoin
                </h2>
                <p className="text-sm text-muted-foreground">BTC</p>
              </div>
              <div className="text-center">
                <p className="text-3xl font-extrabold text-foreground mb-2">
                  $
                  {bitcoinData.last.toLocaleString("en-US", {
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2,
                  })}
                </p>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}
